/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.awt.Point;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class ServicesSalePanel extends ContentPanel {

    Database database ;
    private int servicesInSale ;
    Date date ;
    
    
    private String customerId;
    private final Common common;
    
    /**
     * Creates new form ServicesSalePanel
     */
    public ServicesSalePanel() {
        database = new Database();
        database.connect();
        date = null;
        customerId = "1";
        
        common = new Common();
        servicesInSale = 0;
        initComponents();
        
        loadServices();
        
        AutoCompleteDecorator.decorate(serviceName);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        serviceName = new javax.swing.JComboBox();
        income = new javax.swing.JTextField();
        addToTable = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        servicesTable = new javax.swing.JTable();
        completeSale = new javax.swing.JButton();

        setBackground(Theme.CENTER_BOX_COLOR);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Service details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jXLabel3.setText("Service Name");
        jXLabel3.setName("jXLabel3"); // NOI18N

        jXLabel4.setText("Income");
        jXLabel4.setName("jXLabel4"); // NOI18N

        serviceName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        serviceName.setName("serviceName"); // NOI18N

        income.setName("income"); // NOI18N
        income.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                incomeFocusLost(evt);
            }
        });

        addToTable.setBackground(Theme.BUTTON_COLOR);
        addToTable.setText("Add service to the sale >>");
        addToTable.setName("addToTable"); // NOI18N
        addToTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToTableActionPerformed(evt);
            }
        });

        remove.setBackground(Theme.BUTTON_COLOR);
        remove.setText("Remove");
        remove.setName("remove"); // NOI18N
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(0, 0, Short.MAX_VALUE)
                            .add(remove)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(63, 63, 63)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)))
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(serviceName, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(income)
                        .add(addToTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(serviceName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(income, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 34, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addToTable)
                    .add(remove))
                .addContainerGap())
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        servicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "Service name", "Income"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        servicesTable.setName("servicesTable"); // NOI18N
        jScrollPane1.setViewportView(servicesTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, 224));

        completeSale.setBackground(Theme.BUTTON_COLOR);
        completeSale.setText("Complete Sale");
        completeSale.setName("completeSale"); // NOI18N
        completeSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeSaleActionPerformed(evt);
            }
        });
        completeSale.setVisible(false);
        add(completeSale, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 260, -1, 38));
    }// </editor-fold>//GEN-END:initComponents

    private void incomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incomeFocusLost
        ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_incomeFocusLost

        public boolean validateInputFinal(){
        ValidateOut vOut= new ValidateOut();
        
        
        return vOut.valid;
    }
     
    public boolean validateInput(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateIntTextBox(income);
        return vOut.valid;
    }
    private void addToTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToTableActionPerformed
        // add details to the table
        if (!validateInput()){
            return ;
        }

        DefaultTableModel tableModel= (DefaultTableModel) servicesTable.getModel();

        Vector productDetails = new Vector();
        servicesInSale++;

        productDetails.add(servicesInSale);
        productDetails.add(serviceName.getSelectedItem());
        productDetails.add(income.getText());
        tableModel.addRow(productDetails);

        servicesTable.setModel(tableModel);
        clearUI();
    }//GEN-LAST:event_addToTableActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        ((DefaultTableModel) servicesTable.getModel()).removeRow(servicesTable.getSelectedRow());
    }//GEN-LAST:event_removeActionPerformed

    private void completeSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeSaleActionPerformed
        if (servicesTable.getRowCount() <= 0 || !validateInputFinal()){
            return ;
        }
        try {
            // make entry to the sales table
            String entry = "INSERT INTO `service_sale` (`customer_id`,`date`) VALUES ('"+customerId+"','"+common.getFormatDate(date)+"')";
            database.statement.executeUpdate(entry);

            // make entries to the services_of_sale table
            for (int rows=0; rows < servicesTable.getRowCount();rows++){
                entry = "INSERT INTO `services_of_sale` (`service_name`,`income`, `service_sale_id`) VALUES ('"+servicesTable.getValueAt(rows, 1)+"','"+servicesTable.getValueAt(rows,2)+"','"+(loadServiceSaleId())+"')" ;
                System.out.println(entry);

                database.statement.executeUpdate(entry);
            }

        }catch(SQLException e){
            e.printStackTrace();
        }
        clearUI();
    }//GEN-LAST:event_completeSaleActionPerformed

    public int loadServiceSaleId (){
       int id = 1;
        try{
            String query = "SELECT max(`id`) FROM `service_sale`";
            ResultSet rs = database.statement.executeQuery(query);
            rs.next();
            
            id = rs.getInt("max(`id`)");
            
        }catch(SQLException e){
            e.printStackTrace();
        }
        
        return id ;
    }
    public void loadServices(){
        try {
        
        String query = "SELECT `name` FROM `service`";
        ResultSet rs  = database.statement.executeQuery(query);
        
        Vector v = new Vector();
        while(rs.next()){
            v.add(rs.getString("name"));
        }
        
        serviceName.setModel(new DefaultComboBoxModel(v));
        
        } catch(SQLException e){
            e.printStackTrace();
        }
    }
    
    public void close(Date date, String cId){
        customerId = cId;
        this.date = date;
        completeSaleActionPerformed(null);
    }
    
    public void clearUI(){
        income.setText("");
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addToTable;
    public javax.swing.JButton completeSale;
    public javax.swing.JTextField income;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public org.jdesktop.swingx.JXLabel jXLabel3;
    public org.jdesktop.swingx.JXLabel jXLabel4;
    public javax.swing.JButton remove;
    public javax.swing.JComboBox serviceName;
    public javax.swing.JTable servicesTable;
    // End of variables declaration//GEN-END:variables
}

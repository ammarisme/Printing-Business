/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.awt.Point;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.java.balloontip.BalloonTip;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class PrintOrderSalePanel extends ContentPanel {

    Database database ;
    int orderId ;
    String customerId ;
    Common common;
    /**
     * Creates new form OrderSalePanel
     */
    public PrintOrderSalePanel() {
        initComponents();
        this.setSize(800,250);
        database = new Database();
        database.connect();
        
        common = new Common();
        customerId = "1";
       
        updateMaterialsTable();
        loadMaterialTypes();
        printType.setModel(common.getComboBoxModel("print_type", "name"));
        
        width.setText("0");
        height.setText("0");
        
        AutoCompleteDecorator.decorate(printType);
        AutoCompleteDecorator.decorate(materialType);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createPrintJobPanel = new javax.swing.JPanel();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        width = new javax.swing.JTextField();
        createPrintJob1 = new javax.swing.JButton();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        height = new javax.swing.JTextField();
        JobId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        printType = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addMaterialToTheJob = new javax.swing.JButton();
        quantity = new javax.swing.JTextField();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        materialType = new javax.swing.JComboBox();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        materialStock = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        materialTable = new javax.swing.JTable();
        remove = new javax.swing.JButton();
        makeOrder = new javax.swing.JButton();
        orderedDate = new com.toedter.calendar.JDateChooser();
        dueDate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(Theme.CENTER_BOX_COLOR);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createPrintJobPanel.setBackground(new java.awt.Color(254, 254, 254));
        createPrintJobPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Print JOb", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        createPrintJobPanel.setName("createPrintJobPanel"); // NOI18N
        createPrintJobPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXLabel6.setText("Order id");
        jXLabel6.setName("jXLabel6"); // NOI18N
        createPrintJobPanel.add(jXLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 34, -1, -1));

        jXLabel7.setText("Width");
        jXLabel7.setName("jXLabel7"); // NOI18N
        createPrintJobPanel.add(jXLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 79, -1, -1));

        width.setName("width"); // NOI18N
        width.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                widthFocusLost(evt);
            }
        });
        createPrintJobPanel.add(width, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 74, 190, -1));

        createPrintJob1.setBackground(Theme.BUTTON_COLOR);
        createPrintJob1.setText("Create print Job");
        createPrintJob1.setName("createPrintJob1"); // NOI18N
        createPrintJob1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPrintJob1ActionPerformed(evt);
            }
        });
        createPrintJobPanel.add(createPrintJob1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, -1, 40));

        jXLabel8.setText("Height");
        jXLabel8.setName("jXLabel8"); // NOI18N
        createPrintJobPanel.add(jXLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 124, -1, -1));

        height.setName("height"); // NOI18N
        height.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                heightFocusLost(evt);
            }
        });
        createPrintJobPanel.add(height, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 119, 190, -1));

        JobId.setEditable(false);
        JobId.setName("JobId"); // NOI18N
        createPrintJobPanel.add(JobId, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 29, 190, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("Total");
        jLabel1.setName("jLabel1"); // NOI18N
        createPrintJobPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        total.setName("total"); // NOI18N
        total.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                totalFocusLost(evt);
            }
        });
        createPrintJobPanel.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 190, -1));

        printType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        printType.setName("printType"); // NOI18N
        printType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printTypeActionPerformed(evt);
            }
        });
        createPrintJobPanel.add(printType, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 190, -1));

        jLabel4.setText("Unit Price");
        jLabel4.setName("jLabel4"); // NOI18N
        createPrintJobPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 169, -1, -1));

        add(createPrintJobPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 290));

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Materials to the Job", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addMaterialToTheJob.setBackground(Theme.BUTTON_COLOR);
        addMaterialToTheJob.setText("Add material to the Job");
        addMaterialToTheJob.setEnabled(false);
        addMaterialToTheJob.setName("addMaterialToTheJob"); // NOI18N
        addMaterialToTheJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaterialToTheJobActionPerformed(evt);
            }
        });
        jPanel1.add(addMaterialToTheJob, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, -1, 42));

        quantity.setName("quantity"); // NOI18N
        quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantityFocusLost(evt);
            }
        });
        jPanel1.add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 74, 200, -1));

        jXLabel2.setText("Material type");
        jXLabel2.setName("jXLabel2"); // NOI18N
        jPanel1.add(jXLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 34, -1, -1));

        jXLabel3.setText("Quantity");
        jXLabel3.setName("jXLabel3"); // NOI18N
        jPanel1.add(jXLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 79, -1, -1));

        materialType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "database error" }));
        materialType.setName("materialType"); // NOI18N
        jPanel1.add(materialType, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 29, 200, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 370, 160));

        jXLabel5.setForeground(Theme.FONT_COLOR);
        jXLabel5.setText("Available Material stock");
        jXLabel5.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jXLabel5.setName("jXLabel5"); // NOI18N
        add(jXLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        materialStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material Name", "Quantity"
            }
        ));
        materialStock.setName("materialStock"); // NOI18N
        jScrollPane2.setViewportView(materialStock);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 480, 205));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        materialTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material Name", "Quantity"
            }
        ));
        materialTable.setName("materialTable"); // NOI18N
        jScrollPane1.setViewportView(materialTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 480, 140));

        remove.setBackground(Theme.BUTTON_COLOR);
        remove.setText("Remove Material");
        remove.setName("remove"); // NOI18N
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, -1, -1));

        makeOrder.setBackground(Theme.BUTTON_COLOR);
        makeOrder.setText("Fianlize Order");
        makeOrder.setName("makeOrder"); // NOI18N
        makeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeOrderActionPerformed(evt);
            }
        });
        add(makeOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, -1, 30));
        makeOrder.setVisible(false);

        orderedDate.setName("orderedDate"); // NOI18N
        add(orderedDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, -1, -1));

        dueDate.setName("dueDate"); // NOI18N
        add(dueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, -1, -1));

        jLabel2.setForeground(Theme.FONT_COLOR);
        jLabel2.setText("Ordered date");
        jLabel2.setName("jLabel2"); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, -1));

        jLabel3.setForeground(Theme.FONT_COLOR);
        jLabel3.setText("Due date");
        jLabel3.setName("jLabel3"); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void widthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_widthFocusLost
        ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_widthFocusLost

    private void createPrintJob1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPrintJob1ActionPerformed
        if (!validateInputA()){
            return ;
        }
        addMaterialToTheJob.setEnabled(true);
    }//GEN-LAST:event_createPrintJob1ActionPerformed

    private void heightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_heightFocusLost
        ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_heightFocusLost

    public boolean validateInputA(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateIntTextBox(width);
        vOut.validateIntTextBox(height);
        return vOut.valid;
    }
       
    public boolean validateInput(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateIntTextBox(quantity);
        return vOut.valid;
    }
    
    private void addMaterialToTheJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaterialToTheJobActionPerformed
        // add details to the table
        if (!validateInput()){
            return ;
        }

        // check if there is enough resources
        try {
            String query = "SELECT `stock` FROM `material_detail` WHERE `name` = '"+materialType.getSelectedItem()+"'";
            ResultSet rs = database.statement.executeQuery(query);
            rs.next();
            int stock = rs.getInt("stock");
            if (stock < Integer.parseInt(quantity.getText())){
                BalloonTip balloonTip = new BalloonTip(quantity, "Only "+stock+" units available");
                Animate a = new Animate(balloonTip);
                a.start();
                quantity.setText(""+stock+"");
                return;
            }

        }catch (SQLException e){
            e.printStackTrace();
            return;
        }

        DefaultTableModel tableModel = (DefaultTableModel) materialTable.getModel();
        Vector productDetails = new Vector();

        productDetails.add(materialType.getSelectedItem());
        productDetails.add(quantity.getText());

        tableModel.addRow(productDetails);

        materialTable.setModel(tableModel);

        updateMaterialsTable();

    }//GEN-LAST:event_addMaterialToTheJobActionPerformed

        public void updateMaterialsTable(){
        try{
        String query = "SELECT * FROM `material_detail`";
        ResultSet rs = database.statement.executeQuery(query);
        
        DefaultTableModel tableModel = new DefaultTableModel();
        
        // add columns to table model
        tableModel.addColumn("Material Name");
        tableModel.addColumn("Stock Available");
        
        // add rows
        Vector rows = new Vector();
        while(rs.next()){
            rows.add(rs.getString("name"));
            rows.add(rs.getString("stock"));
            
            tableModel.addRow(rows);
            // nullify the vector
            rows = new Vector();
        }
        
        materialStock.setModel(tableModel);
        }catch(SQLException ex){
        ex.printStackTrace();
        }
    }

    private void quantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityFocusLost
        ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_quantityFocusLost

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        ((DefaultTableModel) materialTable.getModel()).removeRow(materialTable.getSelectedRow());
    }//GEN-LAST:event_removeActionPerformed

    public void close(String cId){
        customerId = cId;
        makeOrderActionPerformed(null);
    }
    private void totalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_totalFocusLost
        // TODO add your handling code here:
        ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_totalFocusLost

    private void makeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeOrderActionPerformed
        try {
            if (materialTable.getRowCount()<=0){
                return ;
            }

            // create an order
            String entry= "INSERT INTO `order` (`customer_id`,`status`,`business_name`,`due_date`,`ordered_date`) VALUES ('"+customerId+"','pending','print','"+common.getFormatDate(dueDate.getDate())+"','"+common.getFormatDate(orderedDate.getDate())+"')";
            database.statement.executeUpdate(entry);
            // create a print job
            entry = "INSERT INTO `print_order` (`order_id`,`width`,`height`,`price`,`print_type_name`, `due_date`,`ordered_date`) VALUES('"+loadOrderId()+"','"+width.getText()+"','"+height.getText()+"','"+total.getText()+"','"+((String) printType.getSelectedItem())+"','"+common.getFormatDate(dueDate.getDate())+"','"+common.getFormatDate(orderedDate.getDate())+"')";
            database.statement.executeUpdate(entry);

            // load all the material of the order to material print table
            // then update the product table
            for (int rows = 0; rows < materialTable.getRowCount(); rows++){
                String materialType = (String) materialTable.getValueAt(rows, 0);
                Float quantity = (Float) Float.parseFloat((String) materialTable.getValueAt(rows, 1));

                entry = "INSERT INTO `material_print` (`quantity`,`material_name`,`print_order_id`) VALUES('"+quantity+"','"+materialType+"','"+loadPrintOrderId()+"')";
                System.out.println(entry);
                database.statement.executeUpdate(entry);

                //get the stock and update
                String query = "SELECT `stock` FROM `material_detail` WHERE `name` ='"+materialType+"'";
                ResultSet rs = database.statement.executeQuery(query);
                rs.next();
                int currentStock = rs.getInt("stock");
                // update material detail table
                String update = "UPDATE `material_detail` SET `stock`="+(currentStock-quantity)+" WHERE `name`='"+materialType+"'";
                database.statement.executeUpdate(update);

            }
            updateMaterialsTable();

        } catch(SQLException e){
            e.printStackTrace();
        }
        }

        public int loadOrderId(){
            int id = 1;

            try {
                String query = "SELECT max(`id`) FROM `order`";
                ResultSet rs = database.statement.executeQuery(query);

                rs.next();
                id = rs.getInt("max(`id`)");

            } catch(SQLException e){
                e.printStackTrace();
            }

            return id;
        }

        private int loadPrintOrderId(){
            int id = 1;

            try {
                String query = "SELECT max(`id`) FROM `print_order`";
                ResultSet rs = database.statement.executeQuery(query);

                rs.next();
                id = rs.getInt("max(`id`)");

            } catch(SQLException e){
                e.printStackTrace();
            }

            return id;
        }

        private void loadMaterialTypes(){
            try {
                String query ="SELECT `name` FROM `material_detail`";
                ResultSet rs = database.statement.executeQuery(query);

                Vector materials = new Vector();
                while(rs.next()){
                    materials.add(rs.getString("name"));
                }

                materialType.setModel(new DefaultComboBoxModel(materials));
            } catch ( SQLException e){
                e.printStackTrace();
            }
    }//GEN-LAST:event_makeOrderActionPerformed

    private void printTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printTypeActionPerformed
        // TODO add your handling code here:
        String query = "SELECT `unit_price` FROM `print_type` WHERE `name`='"+((String) printType.getSelectedItem())+"'";
        
        String p="" ;
        try {
            ResultSet rs = database.statement.executeQuery(query);
            rs.next();
            p = rs.getString("unit_price");
            
        } catch (SQLException ex) {
            Logger.getLogger(PrintOrderSalePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int unitPrice = Integer.parseInt(p);
        Integer w = Integer.parseInt((String) width.getText());
        Integer h = Integer.parseInt((String) height.getText());
        
        Integer t = unitPrice*w*h ;
        
        total.setText(""+t);
        
    }//GEN-LAST:event_printTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField JobId;
    public javax.swing.JButton addMaterialToTheJob;
    public javax.swing.JButton createPrintJob1;
    public javax.swing.JPanel createPrintJobPanel;
    public com.toedter.calendar.JDateChooser dueDate;
    public javax.swing.JTextField height;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public org.jdesktop.swingx.JXLabel jXLabel2;
    public org.jdesktop.swingx.JXLabel jXLabel3;
    public org.jdesktop.swingx.JXLabel jXLabel5;
    public org.jdesktop.swingx.JXLabel jXLabel6;
    public org.jdesktop.swingx.JXLabel jXLabel7;
    public org.jdesktop.swingx.JXLabel jXLabel8;
    public javax.swing.JButton makeOrder;
    public javax.swing.JTable materialStock;
    public javax.swing.JTable materialTable;
    public javax.swing.JComboBox materialType;
    public com.toedter.calendar.JDateChooser orderedDate;
    public javax.swing.JComboBox printType;
    public javax.swing.JTextField quantity;
    public javax.swing.JButton remove;
    public javax.swing.JTextField total;
    public javax.swing.JTextField width;
    // End of variables declaration//GEN-END:variables
}

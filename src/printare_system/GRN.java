/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.awt.Frame;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 * @author Ammar Bin Ameerdeen
 */
public class GRN extends IMSFrame {
     int productInGRN ;
     Database database;
     Frame main;
     
    /**
     * Creates new form Template_printare
     */
    public GRN(java.awt.Frame parent, boolean modal) {
        super();

        main = parent;
        initComponents();
        productInGRN = 0;
        database = new Database();
        database.connect();
        // set UI
        loadProductList();

        Theme theme = new Theme();
        theme.setTheme(this);
        
        this.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        super.windowClosing(e);
                        main.setVisible(true);                        
                        dispose();
                    }
                });
        
        AutoCompleteDecorator.decorate(productType);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = getBackgroundPanel();
        title = getFrameTitle();
        centerPanel = getCenterPanel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        date = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        note = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        GRNTable = new javax.swing.JTable();
        viewStock1 = new javax.swing.JButton();
        viewStock = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        productType = new javax.swing.JComboBox();
        quantity = new javax.swing.JTextField();
        addToGRN = new javax.swing.JButton();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        cost = new javax.swing.JTextField();
        remove = new javax.swing.JButton();
        AddGRNToSystem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(20, 214, 42));
        backgroundPanel.setName("backgroundPanel"); // NOI18N
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setText("Goods Received Note (G R N)");
        title.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        title.setName("title"); // NOI18N
        backgroundPanel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 37, -1, -1));

        centerPanel.setName("centerPanel"); // NOI18N

        jXLabel2.setForeground(Theme.FONT_COLOR);
        jXLabel2.setText("Date");
        jXLabel2.setName("jXLabel2"); // NOI18N

        date.setName("date"); // NOI18N

        jLabel1.setText("Note");
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        note.setColumns(20);
        note.setRows(5);
        note.setName("note"); // NOI18N
        jScrollPane2.setViewportView(note);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        GRNTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "Material Name", "Quantity", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GRNTable.setName("GRNTable"); // NOI18N
        jScrollPane1.setViewportView(GRNTable);

        viewStock1.setBackground(Theme.BUTTON_COLOR);
        viewStock1.setText("View GRN History");
        viewStock1.setName("viewStock1"); // NOI18N
        viewStock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStock1ActionPerformed(evt);
            }
        });

        viewStock.setBackground(Theme.BUTTON_COLOR);
        viewStock.setText("View Stock");
        viewStock.setName("viewStock"); // NOI18N
        viewStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStockActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Product to GRN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jXLabel3.setText("Product type");
        jXLabel3.setName("jXLabel3"); // NOI18N

        jXLabel4.setText("Quantity");
        jXLabel4.setName("jXLabel4"); // NOI18N

        productType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productType.setName("productType"); // NOI18N

        quantity.setName("quantity"); // NOI18N
        quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantityFocusLost(evt);
            }
        });

        addToGRN.setBackground(Theme.BUTTON_COLOR);
        addToGRN.setText("Add to GRN >>");
        addToGRN.setName("addToGRN"); // NOI18N
        addToGRN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToGRNActionPerformed(evt);
            }
        });

        jXLabel5.setText("Cost per unit");
        jXLabel5.setName("jXLabel5"); // NOI18N

        cost.setName("cost"); // NOI18N
        cost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                costFocusLost(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 195, Short.MAX_VALUE)
                        .add(productType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(addToGRN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(cost, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .add(quantity))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(productType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(quantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cost, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 34, Short.MAX_VALUE)
                .add(addToGRN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        remove.setBackground(Theme.BUTTON_COLOR);
        remove.setText("Remove item from Sale");
        remove.setName("remove"); // NOI18N
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        AddGRNToSystem.setBackground(Theme.BUTTON_COLOR);
        AddGRNToSystem.setText("Add GRN to system >>");
        AddGRNToSystem.setName("AddGRNToSystem"); // NOI18N
        AddGRNToSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddGRNToSystemActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout centerPanelLayout = new org.jdesktop.layout.GroupLayout(centerPanel);
        centerPanel.setLayout(centerPanelLayout);
        centerPanelLayout.setHorizontalGroup(
            centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, centerPanelLayout.createSequentialGroup()
                .add(23, 23, 23)
                .add(viewStock1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(viewStock, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jXLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(date, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(4, 4, 4))
            .add(centerPanelLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, centerPanelLayout.createSequentialGroup()
                        .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(remove))
                        .add(18, 18, 18))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, centerPanelLayout.createSequentialGroup()
                        .add(jLabel1)
                        .add(35, 35, 35)))
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(centerPanelLayout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(AddGRNToSystem))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        centerPanelLayout.setVerticalGroup(
            centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(centerPanelLayout.createSequentialGroup()
                .add(26, 26, 26)
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(date, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jXLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(viewStock1)
                        .add(viewStock)))
                .add(18, 18, 18)
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 307, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(centerPanelLayout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(remove)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 53, Short.MAX_VALUE)
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(AddGRNToSystem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(22, 22, 22))
        );

        backgroundPanel.add(centerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 111, -1, -1));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean validateInput(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateFloatTextBox(quantity);
        vOut.validateFloatTextBox(cost);
        return vOut.valid;
    }
    /*
     if (!validateInput()){
            return ;
        }
    */
    private void addToGRNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToGRNActionPerformed
        // add details to the table
        if (!validateInput()){
            return ;
        }
        if (Integer.parseInt(quantity.getText())==0){
         return ;
     }
        DefaultTableModel GRN = (DefaultTableModel) GRNTable.getModel();
        
        Vector productDetails = new Vector();
        productInGRN++;
        
        productDetails.add(productInGRN);
        productDetails.add(productType.getSelectedItem());
        productDetails.add(quantity.getText());
        productDetails.add(Float.parseFloat(cost.getText())*Integer.parseInt(quantity.getText()));
        
        GRN.addRow(productDetails);
        
        GRNTable.setModel(GRN);
    }//GEN-LAST:event_addToGRNActionPerformed

    public boolean validateInputFinal(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateDate(date);
        return vOut.valid;
    }
    private void AddGRNToSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddGRNToSystemActionPerformed
        if (GRNTable.getRowCount() <= 0 || !validateInputFinal()){
            return ;
        }
        
        
        try {
            Common c = new Common();
        // create an entry in GRN table
        String entry = "INSERT INTO `grn` (`status`, `note`,`date`) VALUES('success','"+note.getText()+"','"+c.getFormatDate(date.getDate())+"')";
        database.statement.executeUpdate(entry);
        
        int id = loadGRNId();
        // update all the entries in GRNTable to product_in_grn table
        for (int rows = 0; rows < GRNTable.getRowCount(); rows++){
            String productType = (String) GRNTable.getValueAt(rows, 1);
            // get stock of the current product
            String query = "SELECT `stock` FROM `product` WHERE `name`='"+productType+"'";
            ResultSet rs = database.statement.executeQuery(query);
            rs.next();
            int stock = rs.getInt("stock");
            Integer newStock = stock + Integer.parseInt((String) GRNTable.getValueAt(rows, 2));
            
            String update = "UPDATE `product` SET `stock`='"+newStock+"' WHERE `name`='"+((String) GRNTable.getValueAt(rows, 1))+"'";
            
            // update product stock
            database.statement.executeUpdate(update);
            System.out.println("product added");
            // add entry to product in grn
            update = "INSERT INTO `product_in_grn` (`grn_id`,`quantity`,`product_name`) VALUES ('"+id+"','"+Integer.parseInt((String) GRNTable.getValueAt(rows, 2))+"','"+((String) GRNTable.getValueAt(rows, 1))+"')";
            database.statement.executeUpdate(update);
        }
        
        resetGRNTable();
        
        Locale l;
        note.setText("");
        quantity.setText("");
        cost.setText("");
        date.setDate(null);
        
        
        notifications.updateDatabaseTable();
        } catch(SQLException ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_AddGRNToSystemActionPerformed

    private void quantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityFocusLost
        ValidateOut vOut = new ValidateOut();
       vOut.validateIntTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_quantityFocusLost

    private void costFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_costFocusLost
         ValidateOut vOut = new ValidateOut();
       vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_costFocusLost

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        ((DefaultTableModel) GRNTable.getModel()).removeRow(GRNTable.getSelectedRow());
    }//GEN-LAST:event_removeActionPerformed

    private void viewStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStockActionPerformed
        ManageProducts manageProducts = new ManageProducts(this, true);
        this.setVisible(false);
        manageProducts.setVisible(true);
    }//GEN-LAST:event_viewStockActionPerformed

    private void viewStock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStock1ActionPerformed
        GRNHistory grNHistory = new GRNHistory(this, true);
        this.setVisible(false);
        grNHistory.setVisible(true);
    }//GEN-LAST:event_viewStock1ActionPerformed

    private void resetGRNTable(){
        // reset Table
        DefaultTableModel gModel = new DefaultTableModel();
        gModel.addColumn("s.No");
        gModel.addColumn("Product Type");
        gModel.addColumn("Quantity");
        gModel.addColumn("Cost");
        GRNTable.setModel(gModel);
        
    }
    
    private void loadProductList(){
        try{
            String query = "SELECT `name` FROM `product`";
            ResultSet rs = database.statement.executeQuery(query);
            
            Vector productList = new Vector();
            while(rs.next()){
                productList.add(rs.getString("name"));
            }
            
            productType.setModel(new DefaultComboBoxModel(productList));
            
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    
    public int loadGRNId(){
         try {
             String query ="SELECT max(`id`) FROM `grn`";
             ResultSet rs = database.statement.executeQuery(query);
             rs.next();
             
             return (rs.getInt("max(`id`)"));
         } catch (SQLException ex) {
             Logger.getLogger(GRN.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        return 0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GRN dialog = new GRN(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton AddGRNToSystem;
    public javax.swing.JTable GRNTable;
    public javax.swing.JButton addToGRN;
    public org.jdesktop.swingx.JXPanel backgroundPanel;
    public javax.swing.JPanel centerPanel;
    public javax.swing.JTextField cost;
    public com.toedter.calendar.JDateChooser date;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public org.jdesktop.swingx.JXLabel jXLabel2;
    public org.jdesktop.swingx.JXLabel jXLabel3;
    public org.jdesktop.swingx.JXLabel jXLabel4;
    public org.jdesktop.swingx.JXLabel jXLabel5;
    public javax.swing.JTextArea note;
    public javax.swing.JComboBox productType;
    public javax.swing.JTextField quantity;
    public javax.swing.JButton remove;
    public org.jdesktop.swingx.JXLabel title;
    public javax.swing.JButton viewStock;
    public javax.swing.JButton viewStock1;
    // End of variables declaration//GEN-END:variables
}

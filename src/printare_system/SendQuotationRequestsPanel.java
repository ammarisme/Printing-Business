package printare_system;

/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */


import printare_system.*;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class SendQuotationRequestsPanel extends ContentPanel {
    Common common ;
    Database database ;
    boolean update;
    private int numOfProducts;
    int total;
    
    /**
     * Creates new form ManageProductsPanel
     */
    public SendQuotationRequestsPanel() {
        initComponents();
        common = new Common();
        update = false ;
        database = new Database();
        database.connect();
        total =  0;
        
        // load combo boxes
        productName.setModel(common.getComboBoxModel("product", "name"));
        vendorId.setModel(common.getComboBoxModel("vendor", "id"));
        unit.setModel(common.getComboBoxModel("unit", "name"));
        
        AutoCompleteDecorator.decorate(productName);
        AutoCompleteDecorator.decorate(unit);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        productName = new javax.swing.JComboBox();
        addProduct = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productDescription = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        unitPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        unit = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        vendorId = new javax.swing.JComboBox();
        sendRFQ = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        date = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        sum = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setBackground(Theme.CENTER_BOX_COLOR);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText("Product Name");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("Quantity");
        jLabel2.setName("jLabel2"); // NOI18N

        quantity.setName("quantity"); // NOI18N

        productName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productName.setName("productName"); // NOI18N

        addProduct.setText("Add Product");
        addProduct.setName("addProduct"); // NOI18N
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        jLabel4.setText("Description");
        jLabel4.setName("jLabel4"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        productDescription.setColumns(20);
        productDescription.setRows(5);
        productDescription.setName("productDescription"); // NOI18N
        jScrollPane2.setViewportView(productDescription);

        jLabel6.setText("Unit Price");
        jLabel6.setName("jLabel6"); // NOI18N

        unitPrice.setName("unitPrice"); // NOI18N

        jLabel7.setText("Unit");
        jLabel7.setName("jLabel7"); // NOI18N

        unit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        unit.setName("unit"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel7)
                        .add(157, 157, 157)
                        .add(unit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel1)
                                .add(jLabel6))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, productName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, unitPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(jLabel2)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(quantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(addProduct)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel4)
                                .add(18, 18, 18)
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(productName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(unitPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel7)
                    .add(unit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(quantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .add(18, 18, 18)
                .add(addProduct)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 400, 380));

        jLabel3.setForeground(Theme.FONT_COLOR);
        jLabel3.setText("Vendor");
        jLabel3.setName("jLabel3"); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 20));

        vendorId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vendorId.setName("vendorId"); // NOI18N
        add(vendorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        sendRFQ.setText("Send Quotation request");
        sendRFQ.setName("sendRFQ"); // NOI18N
        sendRFQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendRFQActionPerformed(evt);
            }
        });
        add(sendRFQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 400, -1, -1));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Unit", "Unit Price", "Quantity", "Description", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.setName("productTable"); // NOI18N
        jScrollPane1.setViewportView(productTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, -1, 380));

        date.setName("date"); // NOI18N
        add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, -1, -1));

        jLabel5.setForeground(Theme.FONT_COLOR);
        jLabel5.setText("RFQ Date");
        jLabel5.setName("jLabel5"); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, -1, 30));

        sum.setForeground(Theme.FONT_COLOR);
        sum.setText("n");
        sum.setName("sum"); // NOI18N
        add(sum, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 430, -1, 30));

        jLabel9.setForeground(Theme.FONT_COLOR);
        jLabel9.setText("Total:");
        jLabel9.setName("jLabel9"); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateInput(){
        ValidateOut vOut = new ValidateOut();
        vOut.validateDate(date);
        vOut.validateIntTextBox(unitPrice);
        vOut.validateIntTextBox(quantity);
        vOut.validateNonEmptyTextBox(productDescription.getText(), productDescription );
        
        return vOut.valid;
    }
    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        // add details to the table
        if (!validateInput()){
            return ;
        }
        if (Integer.parseInt(quantity.getText())==0){
            return ;
        }
        DefaultTableModel tableModel = (DefaultTableModel) productTable.getModel();

        Vector productDetails = new Vector();
        numOfProducts++;

        productDetails.add(productName.getSelectedItem());
        productDetails.add((String) unit.getSelectedItem());
        productDetails.add(unitPrice.getText());
        productDetails.add(quantity.getText());
        productDetails.add(productDescription.getText());
        productDetails.add(Integer.parseInt(unitPrice.getText())*Integer.parseInt(quantity.getText()));
        tableModel.addRow(productDetails);

        productTable.setModel(tableModel);
        
        total = total +(Integer.parseInt(unitPrice.getText())*Integer.parseInt(quantity.getText()));
        sum.setText(""+total);

    }//GEN-LAST:event_addProductActionPerformed

    private void sendRFQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendRFQActionPerformed
        if (!validateInput()){
            return ;
        }
        Common common = new Common();
        try {
            String entry = "INSERT INTO `quotation_request` (`sent_date`,`vendor_id`) VALUES('"+common.getFormatDate(date.getDate())+"','"+((String)vendorId.getSelectedItem())+"')";
            database.statement.executeUpdate(entry);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseOrderSendPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                try {
        
        int id = common.getId("id", "quotation_request");
        
        for (int rows = 0; rows < productTable.getRowCount(); rows++){
            
            // get values from the table
            String product =(String) productTable.getValueAt(rows, 0);
            String unit =(String) productTable.getValueAt(rows, 1);
            String unitPrice =(String) productTable.getValueAt(rows, 2);
            String quantity =(String) productTable.getValueAt(rows, 3);
            String description =(String) productTable.getValueAt(rows, 4);
            
            
            String sqlEntry = "INSERT INTO `quotation_request_product` (`quotation_request_id`,`product_name`, `quantity`, `unit_price`,`unit_name`) VALUES('"+id+"','"+product+"','"+quantity+"','"+unitPrice+"','"+unit+"')";
            database.statement.executeUpdate(sqlEntry);
        }
        
        resetTable();
        
        // reset the UI
        quantity.setText("");
        unitPrice.setText("");
        date.setDate(null);
        sum.setText("");
        
        } catch(SQLException ex){
            ex.printStackTrace();
        }
                                              
    
//    private void sendPOActionPerformed(java.awt.event.ActionEvent evt) {                                       
//        if (!validateInput()){
//            return ;
//        }
//        Common common = new Common();
//        try {
//            String entry = "INSERT INTO `quotation_request` (`sent_date`,`vendor_id`) VALUES('"+common.getFormatDate(date.getDate())+"','"+common.getFormatDate(date.getDate())+"','"+((String)vendorId.getSelectedItem())+"','"+((String) vendorId.getSelectedItem())+"')";
//            database.statement.executeUpdate(entry);
//        } catch (SQLException ex) {
//            Logger.getLogger(PurchaseOrderSendPanel.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//                try {
//        
//        int id = common.getId("id", "quotation_request");
//        
//        for (int rows = 0; rows < productTable.getRowCount(); rows++){
//            
//            // get values from the table
//            String product =(String) productTable.getValueAt(rows, 0);
//            String unit =(String) productTable.getValueAt(rows, 1);
//            String unitPrice =(String) productTable.getValueAt(rows, 2);
//            String quantity =(String) productTable.getValueAt(rows, 3);
//            String description =(String) productTable.getValueAt(rows, 4);
//            
//            
//            String sqlEntry = "INSERT INTO `quotation_requested_product` (`quotation_request_id`,`product_name`, `quantity`, `unit_price`,`unit_name`) VALUES('"+id+"','"+product+"','"+quantity+"','"+unitPrice+"','"+unit+"')";
//            database.statement.executeUpdate(sqlEntry);
//        }
//        
//        resetTable();
//        
//        // reset the UI
//        quantity.setText("");
//        unitPrice.setText("");
//        date.setDate(null);
//        sum.setText("");
//        
//        } catch(SQLException ex){
//            ex.printStackTrace();
//        }
//
//                                          
//
    }//GEN-LAST:event_sendRFQActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addProduct;
    public com.toedter.calendar.JDateChooser date;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextArea productDescription;
    public javax.swing.JComboBox productName;
    public javax.swing.JTable productTable;
    public javax.swing.JTextField quantity;
    public javax.swing.JButton sendRFQ;
    public javax.swing.JLabel sum;
    public javax.swing.JComboBox unit;
    public javax.swing.JTextField unitPrice;
    public javax.swing.JComboBox vendorId;
    // End of variables declaration//GEN-END:variables

    private void resetTable() {
         DefaultTableModel gModel = new DefaultTableModel();
        gModel.addColumn("Product");
        gModel.addColumn("Unit");
        gModel.addColumn("Unit Price");
        gModel.addColumn("Quantity");
        gModel.addColumn("Description");
        gModel.addColumn("Total");
        
        productTable.setModel(gModel);
    }
}

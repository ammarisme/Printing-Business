/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import static printare_system.IMSFrame.notifications;

/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class PurchaseOrderSendPanel extends ContentPanel {
    
    IMSFrame main ;
    private int numOfOrderedProducts;
    int total;
    Database database;
    /**
     * Creates new form Template_printare
     */
    public PurchaseOrderSendPanel() {
        super();
        database = new Database();
        database.connect();
        initComponents(); 
         // whatever code must come after this
         Common common = new Common();
         productName.setModel(common.getComboBoxModel("product", "name"));
         unitName.setModel(common.getComboBoxModel("unit", "name"));
         vendorId.setModel(common.getComboBoxModel("vendor", "id"));
         numOfOrderedProducts = 0;
         total = 0;
         
         AutoCompleteDecorator.decorate(productName);
         AutoCompleteDecorator.decorate(unitName);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        centerPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        productName = new javax.swing.JComboBox();
        quantity = new javax.swing.JTextField();
        addToTable = new javax.swing.JButton();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        price = new javax.swing.JTextField();
        unitName = new javax.swing.JComboBox();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderedProductsTable = new org.jdesktop.swingx.JXTable();
        sendPO = new javax.swing.JButton();
        vendorId = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orderDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        deliveryDate = new com.toedter.calendar.JDateChooser();
        sum = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        centerPanel.setBackground(Theme.CENTER_BOX_COLOR);
        centerPanel.setName("centerPanel"); // NOI18N
        centerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Material to the Stock", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jXLabel3.setText("Product");
        jXLabel3.setName("jXLabel3"); // NOI18N

        jXLabel4.setText("Quantity");
        jXLabel4.setName("jXLabel4"); // NOI18N

        productName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "database error" }));
        productName.setName("productName"); // NOI18N

        quantity.setName("quantity"); // NOI18N
        quantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantityFocusLost(evt);
            }
        });

        addToTable.setBackground(Theme.BUTTON_COLOR);
        addToTable.setText("Add Product to P/O");
        addToTable.setName("addToTable"); // NOI18N
        addToTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToTableActionPerformed(evt);
            }
        });

        jXLabel5.setText("Unit Price");
        jXLabel5.setName("jXLabel5"); // NOI18N

        price.setName("price"); // NOI18N
        price.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                priceFocusLost(evt);
            }
        });

        unitName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        unitName.setName("unitName"); // NOI18N

        jXLabel6.setText("Unit Name");
        jXLabel6.setName("jXLabel6"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(163, 163, 163)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(quantity)
                            .add(productName, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jXLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(unitName, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(price)
                            .add(addToTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(productName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(quantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(price, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(unitName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(25, 25, 25)
                .add(addToTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        centerPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 69, 430, -1));

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        orderedProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Unit", "Unit Price", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderedProductsTable.setName("orderedProductsTable"); // NOI18N
        jScrollPane2.setViewportView(orderedProductsTable);

        centerPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 69, 582, 292));

        sendPO.setBackground(Theme.BUTTON_COLOR);
        sendPO.setText("Send P/O");
        sendPO.setName("sendPO"); // NOI18N
        sendPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendPOActionPerformed(evt);
            }
        });
        centerPanel.add(sendPO, new org.netbeans.lib.awtextra.AbsoluteConstraints(887, 432, 171, 46));

        vendorId.setName("vendorId"); // NOI18N
        centerPanel.add(vendorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 100, -1));

        jLabel1.setForeground(Theme.FONT_COLOR);
        jLabel1.setText("Vendor Id");
        jLabel1.setName("jLabel1"); // NOI18N
        centerPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel2.setForeground(Theme.FONT_COLOR);
        jLabel2.setText("Order Date");
        jLabel2.setName("jLabel2"); // NOI18N
        centerPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, -1, -1));

        orderDate.setName("orderDate"); // NOI18N
        centerPanel.add(orderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 24, -1, -1));

        jLabel3.setForeground(Theme.FONT_COLOR);
        jLabel3.setText("Expected Delivery Date");
        jLabel3.setName("jLabel3"); // NOI18N
        centerPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(763, 34, -1, -1));

        deliveryDate.setName("deliveryDate"); // NOI18N
        centerPanel.add(deliveryDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 24, -1, -1));

        sum.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        sum.setForeground(Theme.FONT_COLOR);
        sum.setText("n");
        sum.setName("sum"); // NOI18N
        centerPanel.add(sum, new org.netbeans.lib.awtextra.AbsoluteConstraints(1047, 373, -1, -1));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel5.setForeground(Theme.FONT_COLOR);
        jLabel5.setText("Total :");
        jLabel5.setName("jLabel5"); // NOI18N
        centerPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(987, 373, -1, -1));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(centerPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1090, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(centerPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 490, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityFocusLost
        ValidateOut vOut = new ValidateOut();
        vOut.validateIntTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_quantityFocusLost
/**
 * add purchase order product parameters  to the Jtable
 * TODO:// if there is aleready a product in that particular name, update the stock
 *      place a remove item button
 * 
    */
    private void addToTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToTableActionPerformed
        // add details to the table
        if (!validateInput()){
            return ;
        }
        if (Integer.parseInt(quantity.getText())==0){
            return ;
        }
        DefaultTableModel tableModel = (DefaultTableModel) orderedProductsTable.getModel();

        Vector productDetails = new Vector();
        numOfOrderedProducts++;

        productDetails.add(productName.getSelectedItem());
        productDetails.add((String) unitName.getSelectedItem());
        productDetails.add(price.getText());
        productDetails.add(quantity.getText());
        productDetails.add(Integer.parseInt(price.getText())*Integer.parseInt(quantity.getText()));
        tableModel.addRow(productDetails);

        orderedProductsTable.setModel(tableModel);
        
        total = total +(Integer.parseInt(price.getText())*Integer.parseInt(quantity.getText()));
        sum.setText(""+total);
    }//GEN-LAST:event_addToTableActionPerformed
    /**
     * validate dates -done
     * add purchase order entry to purchase_order
     * go on a for loop until all rows are processed
     * add each product to purchase_order_product
     * reset the table
     * 
    */
    private void sendPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendPOActionPerformed
        if (!validateInput()){
            return ;
        }
        Common common = new Common();
        try {
            String entry = "INSERT INTO `purchase_order` (`ordered_date`,`delivery_date`,`vendor_id`) VALUES('"+common.getFormatDate(orderDate.getDate())+"','"+common.getFormatDate(deliveryDate.getDate())+"','"+((String)vendorId.getSelectedItem())+"')";
            database.statement.executeUpdate(entry);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseOrderSendPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                try {
        
        int id = common.getId("id", "purchase_order");
        
        for (int rows = 0; rows < orderedProductsTable.getRowCount(); rows++){
            
            // get values from the table
            String product =(String) orderedProductsTable.getValueAt(rows, 0);
            String unit =(String) orderedProductsTable.getValueAt(rows, 1);
            String unitPrice =(String) orderedProductsTable.getValueAt(rows, 2);
            String quantity =(String) orderedProductsTable.getValueAt(rows, 3);
            
            
            String sqlEntry = "INSERT INTO `purchase_order_product` (`purchase_order_id`,`product_name`, `quantity`, `unit_price`,`unit_name`) VALUES('"+id+"','"+product+"','"+quantity+"','"+unitPrice+"','"+unit+"')";
            database.statement.executeUpdate(sqlEntry);
        }
        
        resetTable();
        
        // reset the UI
        quantity.setText("");
        price.setText("");
        deliveryDate.setDate(null);
        orderDate.setDate(null);
        sum.setText("");
        
        } catch(SQLException ex){
            ex.printStackTrace();
        }

    }//GEN-LAST:event_sendPOActionPerformed

    private void priceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceFocusLost
        ValidateOut vOut = new ValidateOut();
        vOut.validateIntTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_priceFocusLost

    private void resetTable(){
        // reset Table
        DefaultTableModel gModel = new DefaultTableModel();
        gModel.addColumn("Product");
        gModel.addColumn("Unit");
        gModel.addColumn("Unit Price");
        gModel.addColumn("Quantity");
        gModel.addColumn("Total");
        
        orderedProductsTable.setModel(gModel);
        
    }
    public boolean validateInput(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateIntTextBox(quantity);
        vOut.validateDate(orderDate);
        vOut.validateDate(deliveryDate);
        return vOut.valid;
        
        
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addToTable;
    public javax.swing.JPanel centerPanel;
    public com.toedter.calendar.JDateChooser deliveryDate;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane2;
    public org.jdesktop.swingx.JXLabel jXLabel3;
    public org.jdesktop.swingx.JXLabel jXLabel4;
    public org.jdesktop.swingx.JXLabel jXLabel5;
    public org.jdesktop.swingx.JXLabel jXLabel6;
    public com.toedter.calendar.JDateChooser orderDate;
    public org.jdesktop.swingx.JXTable orderedProductsTable;
    public javax.swing.JTextField price;
    public javax.swing.JComboBox productName;
    public javax.swing.JTextField quantity;
    public javax.swing.JButton sendPO;
    public javax.swing.JLabel sum;
    public javax.swing.JComboBox unitName;
    public javax.swing.JComboBox vendorId;
    // End of variables declaration//GEN-END:variables

}

/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class ManageCategories extends IMSFrame {
    
    IMSFrame main ;
    Database database ;
    /**
     * Creates new form Template_printare
     */
    public ManageCategories() {
        super();
        database = new Database();
        database.connect();
        
        initComponents();
        Theme theme = new Theme();
        theme.setTheme(this);
         this.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        super.windowClosing(e);
        //                main.setVisible(true);                        
                        dispose();
                    }
                });
         
         // whatever code must come after this
         loadCategories();
         loadBrands();
         loadUnits();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = getBackgroundPanel();
        title = getFrameTitle();
        centerPanel = getCenterPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addSubCategory = new javax.swing.JButton();
        subCategory = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        unit = new javax.swing.JTextField();
        addUnit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        unitTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        subCategories = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addBrand = new javax.swing.JButton();
        brand = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        brandTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        category = new javax.swing.JTextField();
        addCategory = new javax.swing.JButton();
        categories = new javax.swing.JScrollPane();
        categoriesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        backgroundPanel.setBackground(Theme.BACKGROUND_COLOR);
        backgroundPanel.setName("backgroundPanel"); // NOI18N
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setBackground(Theme.TITLE_FONT_COLOR);
        title.setText("Manage Brands and Categories");
        title.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        title.setName("title"); // NOI18N
        backgroundPanel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        centerPanel.setBackground(new java.awt.Color(236, 198, 161));
        centerPanel.setName("centerPanel"); // NOI18N
        centerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(Theme.MAIN_AREA_COLOR);
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel2.setText("Sub Category Name");
        jLabel2.setName("jLabel2"); // NOI18N

        addSubCategory.setText("Add Sub Category");
        addSubCategory.setName("addSubCategory"); // NOI18N
        addSubCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubCategoryActionPerformed(evt);
            }
        });

        subCategory.setName("subCategory"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 73, Short.MAX_VALUE)
                        .add(subCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(addSubCategory)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(subCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                .add(addSubCategory)
                .addContainerGap())
        );

        centerPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 330, -1));

        jPanel2.setBackground(Theme.MAIN_AREA_COLOR
        );
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel1.setText("Unit Name");
        jLabel1.setName("jLabel1"); // NOI18N

        unit.setName("unit"); // NOI18N

        addUnit.setText("Add Unit");
        addUnit.setName("addUnit"); // NOI18N
        addUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUnitActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 90, Short.MAX_VALUE)
                        .add(unit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(addUnit)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(unit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                .add(addUnit)
                .addContainerGap())
        );

        centerPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, 280, -1));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        unitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit(s)"
            }
        ));
        unitTable.setToolTipText("");
        unitTable.setName("unitTable"); // NOI18N
        unitTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unitTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(unitTable);

        centerPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 10, 200, 150));

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        subCategories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sub Categories"
            }
        ));
        subCategories.setToolTipText("");
        subCategories.setName("subCategories"); // NOI18N
        jScrollPane2.setViewportView(subCategories);

        centerPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 250, 150));

        jPanel3.setBackground(Theme.MAIN_AREA_COLOR);
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel3.setText("Brand Name");
        jLabel3.setName("jLabel3"); // NOI18N

        addBrand.setText("Add Brand");
        addBrand.setName("addBrand"); // NOI18N
        addBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBrandActionPerformed(evt);
            }
        });

        brand.setName("brand"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 124, Short.MAX_VALUE)
                        .add(brand, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(addBrand)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(brand, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                .add(addBrand)
                .addContainerGap())
        );

        centerPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 330, -1));

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        brandTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand"
            }
        ));
        brandTable.setToolTipText("");
        brandTable.setName("brandTable"); // NOI18N
        jScrollPane3.setViewportView(brandTable);

        centerPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 330, 250, 150));

        jPanel4.setBackground(Theme.MAIN_AREA_COLOR
        );
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel4.setText("Category Name");
        jLabel4.setName("jLabel4"); // NOI18N

        category.setName("category"); // NOI18N

        addCategory.setText("Add Category");
        addCategory.setName("addCategory"); // NOI18N
        addCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 104, Short.MAX_VALUE)
                        .add(category, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(addCategory)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(category, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                .add(addCategory)
                .addContainerGap())
        );

        centerPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, -1));

        categories.setName("categories"); // NOI18N

        categoriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categories"
            }
        ));
        categoriesTable.setToolTipText("");
        categoriesTable.setName("categoriesTable"); // NOI18N
        categoriesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoriesTableMouseClicked(evt);
            }
        });
        categories.setViewportView(categoriesTable);

        centerPanel.add(categories, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 240, 150));

        backgroundPanel.add(centerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 1200, 500));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unitTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unitTableMouseClicked
        loadSubCategories(((String) unitTable.getValueAt(unitTable.getSelectedRow(),0)));
    }//GEN-LAST:event_unitTableMouseClicked

    private void addCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryActionPerformed
        try {
            String insert = "INSERT INTO `product_category` (`name`) VALUES ('"+unit.getText()+"')";
            database.statement.executeUpdate(insert);
            loadCategories();
        } catch (SQLException ex) {
            Logger.getLogger(ManageCategories.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addCategoryActionPerformed

    private void addSubCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubCategoryActionPerformed
        try {
            String insert = "INSERT INTO `sub_category` (`name`,`product_category_name`) VALUES ('"+subCategory.getText()+"','"+((String) unitTable.getValueAt(unitTable.getSelectedRow(),0))+"')";
            database.statement.executeUpdate(insert);
            loadSubCategories(((String) unitTable.getValueAt(unitTable.getSelectedRow(),0)));
        } catch (SQLException ex) {
            Logger.getLogger(ManageCategories.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addSubCategoryActionPerformed

    private void addBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBrandActionPerformed
       try {
            String insert = "INSERT INTO `brand` (`name`) VALUES ('"+brand.getText()+"')";
            database.statement.executeUpdate(insert);
            loadBrands();
        } catch (SQLException ex) {
            Logger.getLogger(ManageCategories.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addBrandActionPerformed

    private void addUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUnitActionPerformed
        try {
            String insert = "INSERT INTO `unit` (`name`) VALUES ('"+unit.getText()+"')";
            database.statement.executeUpdate(insert);
            loadUnits();
        } catch (SQLException ex) {
            Logger.getLogger(ManageCategories.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addUnitActionPerformed

    private void categoriesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriesTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_categoriesTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageCategories dialog = new ManageCategories();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addBrand;
    public javax.swing.JButton addCategory;
    public javax.swing.JButton addSubCategory;
    public javax.swing.JButton addUnit;
    public org.jdesktop.swingx.JXPanel backgroundPanel;
    public javax.swing.JTextField brand;
    public javax.swing.JTable brandTable;
    public javax.swing.JScrollPane categories;
    public javax.swing.JTable categoriesTable;
    public javax.swing.JTextField category;
    public javax.swing.JPanel centerPanel;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable subCategories;
    public javax.swing.JTextField subCategory;
    public org.jdesktop.swingx.JXLabel title;
    public javax.swing.JTextField unit;
    public javax.swing.JTable unitTable;
    // End of variables declaration//GEN-END:variables

    private void loadCategories() {
      try {
        String query = "SELECT `name` FROM `product_category` " ;
        ResultSet rs = database.statement.executeQuery(query);
        
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Categories");
        
        
        while(rs.next()){
            Vector v = new Vector();
            v.add(rs.getString("name"));
            tableModel.addRow(v);
        }
        
        categoriesTable.setModel(tableModel);
      }
        catch(SQLException ex){
                ex.printStackTrace();
                }
    }
    
    private void loadSubCategories(String category) {
      try {
        String query = "SELECT `name` FROM `sub_category` WHERE `product_category_name`='"+category+"'" ;
        ResultSet rs = database.statement.executeQuery(query);
        
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Sub Categories");
        
        
        while(rs.next()){
            Vector v = new Vector();
            v.add(rs.getString("name"));
            tableModel.addRow(v);
        }
        
        subCategories.setModel(tableModel);
      }
        catch(SQLException ex){
                ex.printStackTrace();
                }
    }

    private void loadBrands() {
        try {
        String query = "SELECT `name` FROM `brand`" ;
        ResultSet rs = database.statement.executeQuery(query);
        
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Brand");
        
        
        while(rs.next()){
            Vector v = new Vector();
            v.add(rs.getString("name"));
            tableModel.addRow(v);
        }
        
        brandTable.setModel(tableModel);
      }
        catch(SQLException ex){
                ex.printStackTrace();
                }
    }
    
    private void loadUnits() {
        try {
        String query = "SELECT `name` FROM `unit`" ;
        ResultSet rs = database.statement.executeQuery(query);
        
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Unit");
        
        
        while(rs.next()){
            Vector v = new Vector();
            v.add(rs.getString("name"));
            tableModel.addRow(v);
        }
        
        unitTable.setModel(tableModel);
      }
        catch(SQLException ex){
                ex.printStackTrace();
                }
    }
    
}

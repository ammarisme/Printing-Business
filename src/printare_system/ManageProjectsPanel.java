/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class ManageProjectsPanel extends ContentPanel {

    Database database ;
    boolean update ;
    Common common ;
    /**
     * Creates new form ManageProjectsPanel
     */
    public ManageProjectsPanel() {
        database = new Database();
        database.connect();
        common = new Common();
        
        update = false ;
        initComponents();
        updateProjectTable();
        
    }
    
        public boolean validateInput(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateDate(startingDate);
        vOut.validateDate(finishingDate);
        vOut.validateFloatTextBox(expectedRevenue);
        vOut.validateFloatTextBox(accumulatedCost);
        vOut.validateFloatTextBox(amountReceived);
        
        return vOut.valid;
    }
        public void updateProjectTable(){
        try {
        DefaultTableModel tableModel = new DefaultTableModel();
        
        String query = "SELECT `name`,`revenue`, `cost`,`starting_date`,`finishing_date`,`status`,`amount_recieved` FROM `project`";
        ResultSet rs = database.statement.executeQuery(query);

        tableModel.addColumn("Project Name");
        tableModel.addColumn("Revenue");
        tableModel.addColumn("Cost");
        tableModel.addColumn("Starting Date");
        tableModel.addColumn("Finishing Date");
        tableModel.addColumn("Status");
        tableModel.addColumn("Amount Recieved");

        while(rs.next()){
        // add row by row
        Vector projectDetails = new Vector();

        projectDetails.add(rs.getString("name"));
        projectDetails.add(rs.getString("revenue"));
        projectDetails.add(rs.getString("cost"));
        projectDetails.add(rs.getString("starting_date"));
        projectDetails.add(rs.getString("finishing_date"));
        projectDetails.add(rs.getString("status"));
        projectDetails.add(rs.getString("amount_recieved"));

        tableModel.addRow(projectDetails);

        }

        projectTable.setModel(tableModel);

        } catch (SQLException e){
            e.printStackTrace();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        accumulatedCost = new javax.swing.JTextField();
        projectAction = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        projectName = new javax.swing.JTextField();
        expectedRevenue = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        startingDate = new com.toedter.calendar.JDateChooser();
        finishingDate = new com.toedter.calendar.JDateChooser();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        jLabel6 = new javax.swing.JLabel();
        amountReceived = new javax.swing.JTextField();
        completed = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectTable = new javax.swing.JTable();
        editMode = new javax.swing.JCheckBox();

        setBackground(Theme.CENTER_BOX_COLOR);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Project Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jXLabel5.setText("Project Name");
        jXLabel5.setName("jXLabel5"); // NOI18N

        jXLabel6.setText("Expected revenue");
        jXLabel6.setName("jXLabel6"); // NOI18N

        accumulatedCost.setName("accumulatedCost"); // NOI18N
        accumulatedCost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                accumulatedCostFocusLost(evt);
            }
        });

        projectAction.setBackground(Theme.BUTTON_COLOR);
        projectAction.setText("Create Project");
        projectAction.setName("projectAction"); // NOI18N
        projectAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectActionActionPerformed(evt);
            }
        });

        jLabel4.setText("Accumulated cost");
        jLabel4.setName("jLabel4"); // NOI18N

        projectName.setName("projectName"); // NOI18N
        projectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectNameActionPerformed(evt);
            }
        });

        expectedRevenue.setName("expectedRevenue"); // NOI18N
        expectedRevenue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                expectedRevenueFocusLost(evt);
            }
        });

        jLabel5.setText("Starting Date");
        jLabel5.setName("jLabel5"); // NOI18N

        startingDate.setName("startingDate"); // NOI18N

        finishingDate.setName("finishingDate"); // NOI18N

        jXLabel7.setText("Finishing Date");
        jXLabel7.setName("jXLabel7"); // NOI18N

        jLabel6.setText("Amount Received");
        jLabel6.setName("jLabel6"); // NOI18N

        amountReceived.setName("amountReceived"); // NOI18N
        amountReceived.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                amountReceivedFocusLost(evt);
            }
        });

        completed.setText("Completed");
        completed.setName("completed"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jXLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel4)
                                    .add(jXLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel5)
                                    .add(jLabel6))
                                .add(45, 45, 45)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(startingDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(finishingDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(amountReceived, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, accumulatedCost)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, expectedRevenue)))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(projectName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(22, 22, 22))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(projectAction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(completed)
                        .add(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(projectName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(expectedRevenue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(accumulatedCost, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(startingDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(26, 26, 26)
                        .add(jXLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(finishingDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(30, 30, 30)
                        .add(jLabel6))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(amountReceived, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(31, 31, 31)
                .add(completed)
                .add(18, 18, Short.MAX_VALUE)
                .add(projectAction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 415));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        projectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project Name", "Expected Reveunue", "Cost Incrurred", "Starting Date", "Finishing Date", "Status", "Amount Recieved"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        projectTable.setName("projectTable"); // NOI18N
        projectTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(projectTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, -1, 415));

        editMode.setForeground(Theme.FONT_COLOR);
        editMode.setText("Edit Project(s)");
        editMode.setName("editMode"); // NOI18N
        editMode.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                editModeStateChanged(evt);
            }
        });
        editMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editModeActionPerformed(evt);
            }
        });
        add(editMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void projectActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectActionActionPerformed
        if (!validateInput()){
            return ;
        }

        if(!update){
            try {
                String start = common.getFormatDate(startingDate.getDate());
                String finish = common.getFormatDate(finishingDate.getDate());
                String status = "pending";
                if (completed.isSelected()){
                    status = "completed";
                }
                String query = "INSERT INTO `project` (`name`,`starting_date`,`finishing_date`,`status`,`revenue`,`amount_recieved`,`cost`) VALUES ('"+projectName.getText()+"','"+start+"','"+finish+"','"+status+"','"+expectedRevenue.getText()+"','"+amountReceived.getText()+"','"+accumulatedCost.getText()+"')";
                System.out.println(query);
                database.statement.executeUpdate(query);

            }
            catch (SQLException e){
                e.printStackTrace();
            }
        }
        else{
            // update the table
            String start = common.getFormatDate(startingDate.getDate());
            String finish = common.getFormatDate(finishingDate.getDate());
            String status = "pending";

            if (completed.isSelected()){
                status = "completed";
            }
            try {

                String query = "UPDATE `project` SET `starting_date` = '"+start+"',`finishing_date`='"+finish+"',`status`='"+status+"',`revenue`='"+expectedRevenue.getText()+"',`amount_recieved`='"+amountReceived.getText()+"',`cost`='"+accumulatedCost.getText()+"' WHERE `name`='"+projectName.getText()+"'";
                System.out.println(query);
                database.statement.executeUpdate(query);

            } catch (SQLException e) {
                e.printStackTrace();
            }

        }
        updateProjectTable();
    }//GEN-LAST:event_projectActionActionPerformed

    private void amountReceivedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountReceivedFocusLost
        ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_amountReceivedFocusLost

    private void projectTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectTableMouseClicked
        // update the table contents to the form
        if (!editMode.isSelected()){
            return;
        }
        int row = projectTable.getSelectedRow();
        projectName.setText((String) projectTable.getValueAt(row, 0));
        expectedRevenue.setText((String) projectTable.getValueAt(row, 1));
        accumulatedCost.setText((String) projectTable.getValueAt(row, 2));

        if (projectTable.getValueAt(row,5).equals("pending")){
            completed.setSelected(false);
        }else {
            completed.setSelected(true);
        }
        amountReceived.setText((String) projectTable.getValueAt(row, 6));
    }//GEN-LAST:event_projectTableMouseClicked

    private void editModeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_editModeStateChanged
        // if selected enable edit mode
        if(editMode.isSelected()){
            update = true ;
            // change the Button
            projectAction.setBackground(Color.orange);
            projectAction.setText("Update Project");
            projectName.setEnabled(false);
        }
        else{
            update = false ;
            projectAction.setBackground(new Color(127,175,126));
            projectAction.setText("Create Project");
            projectName.setEnabled(true);
        }
    }//GEN-LAST:event_editModeStateChanged

    private void editModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editModeActionPerformed

    private void expectedRevenueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expectedRevenueFocusLost
        // TODO add your handling code here:
         ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_expectedRevenueFocusLost

    private void accumulatedCostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accumulatedCostFocusLost
        // TODO add your handling code here:
         ValidateOut vOut = new ValidateOut();
        vOut.validateFloatTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_accumulatedCostFocusLost

    private void projectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField accumulatedCost;
    public javax.swing.JTextField amountReceived;
    public javax.swing.JCheckBox completed;
    public javax.swing.JCheckBox editMode;
    public javax.swing.JTextField expectedRevenue;
    public com.toedter.calendar.JDateChooser finishingDate;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JScrollPane jScrollPane1;
    public org.jdesktop.swingx.JXLabel jXLabel5;
    public org.jdesktop.swingx.JXLabel jXLabel6;
    public org.jdesktop.swingx.JXLabel jXLabel7;
    public javax.swing.JButton projectAction;
    public javax.swing.JTextField projectName;
    public javax.swing.JTable projectTable;
    public com.toedter.calendar.JDateChooser startingDate;
    // End of variables declaration//GEN-END:variables
}

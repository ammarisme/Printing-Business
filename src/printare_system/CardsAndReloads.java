/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.awt.Frame;
import java.sql.Array;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import net.java.balloontip.BalloonTip;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class CardsAndReloads extends IMSFrame {

    Database database ;
    Frame main ;
    /**
     * Creates new form Template_printare
     */
    public CardsAndReloads(java.awt.Frame parent, boolean modal) {
        super();
        initComponents();
        
        main = parent;
        
        // user defined construction @ammar
        database = new Database();
        database.connect();
        loadNetworkNames();
        loadCardValues();
       
        Theme theme = new Theme();
        theme.setTheme(this);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        super.windowClosing(e);
                        main.setVisible(true);                        
                        dispose();
                    }
                });
        
        AutoCompleteDecorator.decorate(networkS);
        AutoCompleteDecorator.decorate(networkSell);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = getBackgroundPanel();
        title = getFrameTitle();
        centerPanel = getCenterPanel();
        jPanel2 = new javax.swing.JPanel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        networkS = new javax.swing.JComboBox();
        sendReload = new javax.swing.JButton();
        sendAmount = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        sellCardQuantity = new javax.swing.JTextField();
        networkSell = new javax.swing.JComboBox();
        sellCardValue = new javax.swing.JComboBox();
        jXLabel10 = new org.jdesktop.swingx.JXLabel();
        sell = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Printare");

        backgroundPanel.setBackground(new java.awt.Color(20, 214, 42));
        backgroundPanel.setName("backgroundPanel"); // NOI18N
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setText("Cards/Reload Sale");
        title.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        title.setName("title"); // NOI18N
        backgroundPanel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 42, -1, -1));

        centerPanel.setBackground(Theme.MAIN_AREA_COLOR);
        centerPanel.setName("centerPanel"); // NOI18N

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Send Reload", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jXLabel4.setText("Network");
        jXLabel4.setName("jXLabel4"); // NOI18N

        jXLabel5.setText("Amount");
        jXLabel5.setName("jXLabel5"); // NOI18N

        networkS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Etisalat", "Airtel", "Dialog" }));
        networkS.setName("networkS"); // NOI18N

        sendReload.setBackground(Theme.BUTTON_COLOR);
        sendReload.setText("Send Reload");
        sendReload.setName("sendReload"); // NOI18N
        sendReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendReloadActionPerformed(evt);
            }
        });

        sendAmount.setName("sendAmount"); // NOI18N
        sendAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sendAmountFocusLost(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(networkS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sendAmount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(sendReload, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(networkS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sendAmount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(sendReload, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(254, 254, 254));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sell Card", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jXLabel6.setText("Network");
        jXLabel6.setName("jXLabel6"); // NOI18N

        jXLabel7.setText("Value");
        jXLabel7.setName("jXLabel7"); // NOI18N

        sellCardQuantity.setName("sellCardQuantity"); // NOI18N
        sellCardQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sellCardQuantityFocusLost(evt);
            }
        });

        networkSell.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Etisalat", "Airtel", "Dialog" }));
        networkSell.setName("networkSell"); // NOI18N

        sellCardValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "50" }));
        sellCardValue.setName("sellCardValue"); // NOI18N

        jXLabel10.setText("Quantity");
        jXLabel10.setName("jXLabel10"); // NOI18N

        sell.setBackground(Theme.BUTTON_COLOR);
        sell.setText("Sell Card");
        sell.setName("sell"); // NOI18N
        sell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jXLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(88, 88, 88)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(networkSell, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sellCardValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sellCardQuantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(91, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(sell, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(networkSell, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sellCardValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sellCardQuantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 78, Short.MAX_VALUE)
                .add(sell, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout centerPanelLayout = new org.jdesktop.layout.GroupLayout(centerPanel);
        centerPanel.setLayout(centerPanelLayout);
        centerPanelLayout.setHorizontalGroup(
            centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(centerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 30, Short.MAX_VALUE)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        centerPanelLayout.setVerticalGroup(
            centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(centerPanelLayout.createSequentialGroup()
                .add(23, 23, 23)
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        backgroundPanel.add(centerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 103, -1, -1));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

public boolean validateInputB(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateFloatTextBox(sendAmount);
        return vOut.valid;
    }

public boolean validateInputD(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateFloatTextBox(sellCardQuantity);
        return vOut.valid;
    }
    /*
     if (!validateInput()){
            return ;
        }
    */
    private void sendReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendReloadActionPerformed
 if (!validateInputB()){
            return ;
        }
 if (Integer.parseInt(sendAmount.getText())==0){
         return ;
     }
        try {
        // check if there is available reload in reload_stock
            String query = "SELECT `value` FROM `network_b` WHERE `name`='"+networkS.getSelectedItem()+"'";
            ResultSet rs = database.statement.executeQuery(query);
            rs.next();
            int availableReload = rs.getInt("value");
            
            if (availableReload <= Integer.parseInt(sendAmount.getText())){
                BalloonTip balloonTip = new BalloonTip(sendAmount, "Only "+availableReload+" Rs available");
            Animate a = new Animate(balloonTip);
            a.start();
            sendAmount.setText(""+availableReload+"");
            return;
            
            }else{
             // continuing with the transaction
        // entry to the sent reload table
            String entry = "INSERT INTO `reload_sent` (`amount`, `network_b_name`) VALUES ('"+Integer.parseInt(sendAmount.getText())+"','"+networkS.getSelectedItem()+"')";
            database.statement.executeUpdate(entry);
        // reduce the amount in the reload_stock table
            String update = "UPDATE `network_b` SET `value`='"+(availableReload - Integer.parseInt(sendAmount.getText()))+"' WHERE `name`='"+networkS.getSelectedItem()+"' ";
            database.statement.executeUpdate(update);
            } 
        }catch(SQLException e){
        e.printStackTrace();
        }
        
    }//GEN-LAST:event_sendReloadActionPerformed

    private void sellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellActionPerformed
        // check if there is card avaialbe
 if (!validateInputD()){
            return ;
        }
 if (Integer.parseInt(sellCardQuantity.getText())==0){
         return ;
     }
        int stock = 0;
        try{
        String query = "SELECT `stock` FROM `card` WHERE `value`='"+sellCardValue.getSelectedItem()+"' AND `network_b_name`='"+networkSell.getSelectedItem()+"'";
        ResultSet rs = database.statement.executeQuery(query);
        rs.next();
        
        stock = rs.getInt("stock");
        
        // if available reduce the number of card from the database and enter it into 
        if (stock < Integer.parseInt(sellCardQuantity.getText())){
            BalloonTip balloonTip = new BalloonTip(sellCardQuantity, "Only "+stock+" cards are available");
            Animate a = new Animate(balloonTip);
            a.start();
            sellCardQuantity.setText(""+stock+"");
            return;
        }else{
            // begin transaction
            String update = "UPDATE `card` SET `stock`='"+(stock-Integer.parseInt(sellCardQuantity.getText()))+"' WHERE `value`='"+sellCardValue.getSelectedItem()+"' AND `network_b_name`='"+networkSell.getSelectedItem()+"'";
            database.statement.executeUpdate(update);
            
            String entry = "INSERT INTO `card_sold` (`card_network_b_name`, `card_value`, `quantity`) VALUES('"+networkSell.getSelectedItem()+"','"+sellCardValue.getSelectedItem()+"','"+sellCardQuantity.getText()+"')";
            database.statement.executeUpdate(entry);
        }
        }catch(SQLException ex){
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_sellActionPerformed

    private void sendAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sendAmountFocusLost
        ValidateOut vOut = new ValidateOut();
       vOut.validateIntTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_sendAmountFocusLost

    private void sellCardQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sellCardQuantityFocusLost
        ValidateOut vOut = new ValidateOut();
       vOut.validateIntTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_sellCardQuantityFocusLost
    
    // @ammar
    public void loadNetworkNames(){
        try {
            String query = "SELECT `name` FROM network_b";
            ResultSet rs = database.statement.executeQuery(query);
            
            Vector v = new Vector();
            
            while(rs.next()){
            v.add(rs.getString("name"));
            }
            

            networkS.setModel(new DefaultComboBoxModel(v));

            networkSell.setModel(new DefaultComboBoxModel(v));
            
        } catch (SQLException ex) {
            Logger.getLogger(CardsAndReloads.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
   private void loadCardValues(){
       try{
       //get database
           String query = "SELECT distinct `value` FROM `card`";
           ResultSet rs = database.statement.executeQuery(query);
           Vector values = new Vector();
           while(rs.next()){
               values.add(rs.getInt("value"));
           }
           
       // put into the combo box
           sellCardValue.setModel(new DefaultComboBoxModel(values));
       }
       catch(SQLException e){
           e.printStackTrace();
       }
   }
   
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CardsAndReloads dialog = new CardsAndReloads(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public org.jdesktop.swingx.JXPanel backgroundPanel;
    public javax.swing.JPanel centerPanel;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public org.jdesktop.swingx.JXLabel jXLabel10;
    public org.jdesktop.swingx.JXLabel jXLabel4;
    public org.jdesktop.swingx.JXLabel jXLabel5;
    public org.jdesktop.swingx.JXLabel jXLabel6;
    public org.jdesktop.swingx.JXLabel jXLabel7;
    public javax.swing.JComboBox networkS;
    public javax.swing.JComboBox networkSell;
    public javax.swing.JButton sell;
    public javax.swing.JTextField sellCardQuantity;
    public javax.swing.JComboBox sellCardValue;
    public javax.swing.JTextField sendAmount;
    public javax.swing.JButton sendReload;
    public org.jdesktop.swingx.JXLabel title;
    // End of variables declaration//GEN-END:variables
}

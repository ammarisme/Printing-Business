/*
 * copyright Ammar Bin Ameerdeen
 * All rights reserved
 */
package printare_system;

import java.awt.Frame;
import java.sql.Array;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


/**
 *
 * @author Ammar Bin Ameerdeen
 */
public class ManageCardsAndReloads extends IMSFrame {

    Database database ;
    Frame main ;
    /**
     * Creates new form Template_printare
     */
    public ManageCardsAndReloads(java.awt.Frame parent, boolean modal) {
        super();
        initComponents();
        
        main = parent;
        
        // user defined construction @ammar
        database = new Database();
        database.connect();
        loadNetworkNames();
        loadCardValues();
        
        updateCardsTable();
        updateReloadsTable();
        
        Theme theme = new Theme ();
        theme.setTheme(this);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        super.windowClosing(e);
                        main.setVisible(true);                        
                        dispose();
                    }
                });
        
        AutoCompleteDecorator.decorate(networkL);
        AutoCompleteDecorator.decorate(networkAdd);
        AutoCompleteDecorator.decorate(addCardValue);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = getBackgroundPanel();
        title = getFrameTitle();
        centerPanel = getCenterPanel();
        jPanel1 = new javax.swing.JPanel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        loadAmount = new javax.swing.JTextField();
        networkL = new javax.swing.JComboBox();
        loadReloadToDatabase = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        networkAdd = new javax.swing.JComboBox();
        add = new javax.swing.JButton();
        addCardValue = new javax.swing.JComboBox();
        addCardQuantity = new javax.swing.JTextField();
        jXLabel11 = new org.jdesktop.swingx.JXLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cardsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        reloadsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Printare");

        backgroundPanel.setBackground(new java.awt.Color(20, 214, 42));
        backgroundPanel.setName("backgroundPanel"); // NOI18N
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setText("Manage Cards and Reloads");
        title.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        title.setName("title"); // NOI18N
        backgroundPanel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 42, -1, -1));

        centerPanel.setBackground(Theme.MAIN_AREA_COLOR);
        centerPanel.setName("centerPanel"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Reload", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jXLabel2.setText("Network");
        jXLabel2.setName("jXLabel2"); // NOI18N

        jXLabel3.setText("Amount");
        jXLabel3.setName("jXLabel3"); // NOI18N

        loadAmount.setName("loadAmount"); // NOI18N
        loadAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                loadAmountFocusLost(evt);
            }
        });

        networkL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Etisalat", "Airtel", "Dialog" }));
        networkL.setName("networkL"); // NOI18N

        loadReloadToDatabase.setBackground(Theme.BUTTON_COLOR);
        loadReloadToDatabase.setText("<< Load");
        loadReloadToDatabase.setName("loadReloadToDatabase"); // NOI18N
        loadReloadToDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadReloadToDatabaseActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jXLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(loadAmount)
                    .add(networkL, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(loadReloadToDatabase, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, loadReloadToDatabase, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jXLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(networkL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jXLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(loadAmount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(254, 254, 254));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Card to system", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jXLabel8.setText("Network");
        jXLabel8.setName("jXLabel8"); // NOI18N

        jXLabel9.setText("Value");
        jXLabel9.setName("jXLabel9"); // NOI18N

        networkAdd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Etisalat", "Airtel", "Dialog" }));
        networkAdd.setName("networkAdd"); // NOI18N

        add.setBackground(Theme.BUTTON_COLOR);
        add.setText("<< Add");
        add.setName("add"); // NOI18N
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        addCardValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "30" }));
        addCardValue.setName("addCardValue"); // NOI18N

        addCardQuantity.setName("addCardQuantity"); // NOI18N
        addCardQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                addCardQuantityFocusLost(evt);
            }
        });

        jXLabel11.setText("Quantity");
        jXLabel11.setName("jXLabel11"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jXLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(networkAdd, 0, 154, Short.MAX_VALUE)
                    .add(addCardValue, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(addCardQuantity))
                .add(18, 18, 18)
                .add(add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, add, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jXLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(networkAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jXLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(addCardValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addCardQuantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        cardsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Network", "Card Value", "Stock"
            }
        ));
        cardsTable.setName("cardsTable"); // NOI18N
        jScrollPane1.setViewportView(cardsTable);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        reloadsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Network Name", "Available Reload"
            }
        ));
        reloadsTable.setName("reloadsTable"); // NOI18N
        jScrollPane2.setViewportView(reloadsTable);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setForeground(Theme.FONT_COLOR);
        jLabel1.setText("Cards");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel2.setForeground(Theme.FONT_COLOR);
        jLabel2.setText("Reloads");
        jLabel2.setName("jLabel2"); // NOI18N

        org.jdesktop.layout.GroupLayout centerPanelLayout = new org.jdesktop.layout.GroupLayout(centerPanel);
        centerPanel.setLayout(centerPanelLayout);
        centerPanelLayout.setHorizontalGroup(
            centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(centerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(centerPanelLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 389, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 382, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(centerPanelLayout.createSequentialGroup()
                        .add(199, 199, 199)
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel2)
                        .add(253, 253, 253))))
        );
        centerPanelLayout.setVerticalGroup(
            centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, centerPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(centerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(centerPanelLayout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(62, 62, 62)
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        backgroundPanel.add(centerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 103, -1, -1));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backgroundPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

       
       
    private void loadReloadToDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadReloadToDatabaseActionPerformed
             if (!validateInputA()){
            return ;
        }
             if (Integer.parseInt(loadAmount.getText())==0){
         return ;
     }

        try{
            // get the current amount at the particular network
            String query = "SELECT `value` FROM `network_b` WHERE `name`='"+networkL.getSelectedItem()+"'";
            ResultSet value  = database.statement.executeQuery(query);
            Integer currentValue = 0;
            while(value.next()){
                currentValue = value.getInt("value");
            }
            
            
            // update value
            Integer newValue = currentValue + Integer.parseInt(loadAmount.getText());
            
            String update= "UPDATE `network_b` SET `value`='"+newValue+"' WHERE `name`='"+networkL.getSelectedItem()+"'";
            database.statement.executeUpdate(update);
            updateReloadsTable();
        }catch (SQLException e){
        e.printStackTrace();
        }
    }//GEN-LAST:event_loadReloadToDatabaseActionPerformed
public boolean validateInputA(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateFloatTextBox(loadAmount);
        return vOut.valid;
    }


public boolean validateInputC(){
        ValidateOut vOut= new ValidateOut();
        vOut.validateFloatTextBox(addCardQuantity);
        return vOut.valid;
    }

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
 if (!validateInputC()){
            return ;
        }
 if (Integer.parseInt(addCardQuantity.getText())==0){
         return ;
     }
        try {
            // get current card stock
            String query = "SELECT `stock` FROM `card` WHERE `network_b_name`='"+networkAdd.getSelectedItem()+"' and `value`='"+addCardValue.getSelectedItem()+"'";
            System.out.println(query);
            ResultSet rs = database.statement.executeQuery(query);
            rs.next();
            int stock = rs.getInt("stock");
            // add the addcard quantity 
            stock = stock + Integer.parseInt(addCardQuantity.getText());
            
            String update = "UPDATE `card` SET `stock`='"+stock+"' WHERE `network_b_name`='"+networkAdd.getSelectedItem()+"' and `value`='"+addCardValue.getSelectedItem()+"'";
            System.out.println(update);
            database.statement.executeUpdate(update);
            
            updateCardsTable();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_addActionPerformed

    private void loadAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loadAmountFocusLost

        ValidateOut vOut = new ValidateOut();
       vOut.validateIntTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_loadAmountFocusLost

    private void addCardQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addCardQuantityFocusLost
        ValidateOut vOut = new ValidateOut();
       vOut.validateIntTextBox((JTextField) evt.getComponent());
    }//GEN-LAST:event_addCardQuantityFocusLost
    
    // @ammar
    public void loadNetworkNames(){
        try {
            String query = "SELECT `name` FROM network_b";
            ResultSet rs = database.statement.executeQuery(query);
            
            Vector v = new Vector();
            
            while(rs.next()){
            v.add(rs.getString("name"));
            }
            
            networkL.setModel(new DefaultComboBoxModel(v));
            networkAdd.setModel(new DefaultComboBoxModel(v));

            
        } catch (SQLException ex) {
            Logger.getLogger(ManageCardsAndReloads.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
   private void loadCardValues(){
       try{
       //get database
           String query = "SELECT distinct `value` FROM `card`";
           ResultSet rs = database.statement.executeQuery(query);
           Vector values = new Vector();
           while(rs.next()){
               values.add(rs.getInt("value"));
           }
           
       // put into the combo box
           addCardValue.setModel(new DefaultComboBoxModel(values));

       }
       catch(SQLException e){
           e.printStackTrace();
       }
   }
   
   public void updateCardsTable(){
        try{
        String query = "SELECT * FROM `card`";
        ResultSet rs = database.statement.executeQuery(query);
        
        DefaultTableModel tableModel = new DefaultTableModel();
        
        // add columns to table model
        tableModel.addColumn("Network");
        tableModel.addColumn("Card Value");
        tableModel.addColumn("Stock Available");
        
        // add rows
        Vector rows = new Vector();
        while(rs.next()){
            rows.add(rs.getString("network_b_name"));
            rows.add(rs.getInt("value"));
            rows.add(rs.getString("stock"));
            
            tableModel.addRow(rows);
            // nullify the vector
            rows = new Vector();
        }
        
        cardsTable.setModel(tableModel);
        }catch(SQLException ex){
        ex.printStackTrace();
        }
    }
   
   public void updateReloadsTable(){
        try{
        String query = "SELECT * FROM `network_b`";
        ResultSet rs = database.statement.executeQuery(query);
        
        DefaultTableModel tableModel = new DefaultTableModel();
        
        // add columns to table model
        tableModel.addColumn("Network");
        tableModel.addColumn("Available Reload");
        
        // add rows
        Vector rows = new Vector();
        while(rs.next()){
            rows.add(rs.getString("name"));
            rows.add(rs.getInt("value"));
            
            
            tableModel.addRow(rows);
            // nullify the vector
            rows = new Vector();
        }
        
        reloadsTable.setModel(tableModel);
        }catch(SQLException ex){
        ex.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCardsAndReloads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageCardsAndReloads dialog = new ManageCardsAndReloads(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton add;
    public javax.swing.JTextField addCardQuantity;
    public javax.swing.JComboBox addCardValue;
    public org.jdesktop.swingx.JXPanel backgroundPanel;
    public javax.swing.JTable cardsTable;
    public javax.swing.JPanel centerPanel;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public org.jdesktop.swingx.JXLabel jXLabel11;
    public org.jdesktop.swingx.JXLabel jXLabel2;
    public org.jdesktop.swingx.JXLabel jXLabel3;
    public org.jdesktop.swingx.JXLabel jXLabel8;
    public org.jdesktop.swingx.JXLabel jXLabel9;
    public javax.swing.JTextField loadAmount;
    public javax.swing.JButton loadReloadToDatabase;
    public javax.swing.JComboBox networkAdd;
    public javax.swing.JComboBox networkL;
    public javax.swing.JTable reloadsTable;
    public org.jdesktop.swingx.JXLabel title;
    // End of variables declaration//GEN-END:variables
}
